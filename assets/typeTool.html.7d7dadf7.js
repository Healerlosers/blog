import{_ as s,o as n,c as a,a as p}from"./app.39db3157.js";const t={},e=p(`<h1 id="\u7C7B\u578B\u5DE5\u5177" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u5DE5\u5177" aria-hidden="true">#</a> \u7C7B\u578B\u5DE5\u5177</h1><h2 id="is" tabindex="-1"><a class="header-anchor" href="#is" aria-hidden="true">#</a> is</h2><p><strong>is \u7528\u4E8E\u5B9A\u4E49\u53D8\u91CF\u5C5E\u4E8E\u67D0\u4E2A\u7C7B\u578B</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> isString <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span>
<span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//error: \u5BF9\u8C61\u7684\u7C7B\u578B\u4E3A &quot;unknown&quot;\u3002</span>
    a<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token string">&#39;ab&#39;</span>
<span class="token function">func</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u91CD\u65B0\u5B9A\u4E49 isString \u51FD\u6570\uFF0C\u4F7F\u7528 is \u6765\u5B9A\u4E49\u53D8\u91CF\u4E3A\u67D0\u4E2A\u7C7B\u578B</p><ul><li>x is string \u8868\u793A\u5982\u679C\u51FD\u6570\u8FD4\u56DE\u503C\u4E3A true\uFF0C\u5219 x \u4E3A string \u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> isString <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> x <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span>
<span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token string">&#39;ab&#39;</span>
<span class="token function">func</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="keyof" tabindex="-1"><a class="header-anchor" href="#keyof" aria-hidden="true">#</a> keyof</h2><p><strong>\u83B7\u53D6\u7C7B\u3001\u63A5\u53E3\u7D22\u5F15\u7EC4\u6210\u7684\u8054\u5408\u7C7B\u578B</strong></p><ul><li>keyof \u53EF\u7528\u4E8E\u57FA\u672C\u6570\u636E\u7C7B\u578B\u3001any\u3001class\u3001interface\u3001enum \u7B49</li></ul><p>\u4EFB\u4F55\u7C7B\u578B\u90FD\u53EF\u4EE5\u4F7F\u7528 keyof</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">string</span>
<span class="token keyword">let</span> str<span class="token operator">:</span> <span class="token constant">TYPE</span> <span class="token operator">=</span> <span class="token string">&#39;11&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7D22\u5F15\u7C7B\u578B\u4F7F\u7528 keyof \u65F6\uFF0C\u83B7\u53D6\u7D22\u5F15\u540D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> str<span class="token operator">:</span> <span class="token constant">TYPE</span> <span class="token operator">=</span> <span class="token string">&#39;name&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> typeof</h3><p>\u4F7F\u7528 typeof \u53EF\u83B7\u53D6\u53D8\u91CF\u7684\u7C7B\u578B</p><div class="language-TS ext-TS line-numbers-mode"><pre class="language-TS"><code>let str = &#39;\u5F20\u4E09&#39;
// type TYPE = string
type TYPE = typeof str
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 typeof \u83B7\u53D6\u5BF9\u8C61\u7684</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 type TYPE = <span class="token punctuation">{</span>
  name: string;
  age: number;
 */</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token operator">=</span> <span class="token keyword">typeof</span> obj
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>keyof \u4E0E typeof \u7ED3\u5408\u5B9A\u4E49\u83B7\u53D6\u5BF9\u8C61\u5C5E\u6027\u7684\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getAttribute</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> object<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key <span class="token keyword">as</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span> <span class="token punctuation">}</span>
<span class="token function">getAttribute</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="in" tabindex="-1"><a class="header-anchor" href="#in" aria-hidden="true">#</a> in</h2><p>in \u7528\u4E8E\u904D\u5386\u63A5\u53E3\u6216\u8054\u5408\u7C7B\u578B\u7684\u5C5E\u6027</p><ul><li>K in keyof T \u6307 K \u7C7B\u578B\u4E3A keyof T \u83B7\u53D6\u7684 T \u7C7B\u578B\u7D22\u5F15\u7EC4\u6210\u7684\u8054\u5408\u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">USER</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">MEMBER</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> obj<span class="token operator">:</span> <span class="token constant">MEMBER</span><span class="token operator">&lt;</span><span class="token constant">USER</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> address<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> address<span class="token operator">:</span> <span class="token string">&#39;\u5C71\u4E1C&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends" aria-hidden="true">#</a> extends</h2><p>extends \u5728 TS \u4E2D\u62E5\u6709\u591A\u4E2A\u7279\u6027</p><h3 id="\u7C7B\u578B\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u7EE7\u627F" aria-hidden="true">#</a> \u7C7B\u578B\u7EE7\u627F</h3><p>extends \u5B9E\u73B0\u7C7B\u578B\u7684\u7EE7\u627F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">typez</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token punctuation">{</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> obj<span class="token operator">:</span> typez <span class="token operator">=</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>extends \u53EF\u7528\u4E8E\u6CDB\u578B\u7684\u7C7B\u578B\u9650\u5B9A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">func</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token function">render</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">render</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> n <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7C7B\u578B\u6761\u4EF6\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u6761\u4EF6\u5224\u65AD" aria-hidden="true">#</a> \u7C7B\u578B\u6761\u4EF6\u5224\u65AD</h3><p>extends \u7528\u4E8E\u6761\u4EF6\u5224\u65AD\u6765\u51B3\u5B9A\u8FD4\u56DE\u4EC0\u4E48\u7C7B\u578B\uFF0C<code>A extends B ? true:false</code>\u3002\u5982\u679C A\uFF08\u72ED\u7A84\u7C7B\u578B\uFF09 \u53EF\u4EE5\u8D4B\u4E88 B\uFF08\u5BBD\u6CDB\u7C7B\u578B\uFF09 \u7C7B\u578B\u5219\u4E3A true</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE1</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE2</span></span> <span class="token operator">=</span> <span class="token constant">TYPE1</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token keyword">const</span> <span class="token constant">OBJ</span><span class="token operator">:</span> <span class="token constant">TYPE2</span> <span class="token operator">=</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8054\u5408\u7C7B\u578B\u7684\u6761\u4EF6\u5224\u65AD</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE1</span></span> <span class="token operator">=</span> <span class="token builtin">string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE2</span></span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span>
<span class="token keyword">const</span> str1<span class="token operator">:</span> <span class="token constant">TYPE2</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">TYPE1</span></span> <span class="token operator">?</span> <span class="token builtin">string</span> <span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">//boolean</span>
<span class="token keyword">const</span> str2<span class="token operator">:</span> <span class="token constant">TYPE1</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">TYPE2</span></span> <span class="token operator">?</span> <span class="token builtin">string</span> <span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span> <span class="token comment">//string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u8054\u5408\u7C7B\u578B\u8FC7\u6EE4\u6389\u6307\u5B9A\u7D22\u5F15</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">FilterObjectProperty<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">as</span> Exclude<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">HD</span></span> <span class="token operator">=</span> FilterObjectProperty<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FC7\u6EE4\u6389\u6307\u5B9A\u7684\u7C7B\u578B\uFF0C\u4EE5\u4E0B\u4EE3\u7801\u542B\u6709\u4E0B\u9762\u51E0\u4E2A\u542B\u4E49</p><ul><li>\u6839\u636E\u7C7B\u578B\u83B7\u53D6\u7D22\u5F15\u7EC4\u5408\u6210\u7684\u8054\u5408\u7C7B\u578B</li><li>\u6839\u636E\u65B0\u7684\u8054\u5408\u7C7B\u578B\u63D0\u53D6\u51FA\u6307\u5B9A\u7684\u7D22\u5F15\uFF0C\u7EC4\u5408\u6210\u65B0\u7684\u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">USER</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token function">get</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">FilterProperty<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">K</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span>
<span class="token keyword">type</span> <span class="token class-name">UserType</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">USER</span><span class="token punctuation">,</span> FilterProperty<span class="token operator">&lt;</span><span class="token constant">USER</span><span class="token punctuation">,</span> <span class="token builtin">Function</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6CDB\u578B\u6761\u4EF6\u5206\u914D" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u6761\u4EF6\u5206\u914D" aria-hidden="true">#</a> \u6CDB\u578B\u6761\u4EF6\u5206\u914D</h3><p>\u5982\u679C\u6CDB\u578B\u662F\u666E\u901A\u7C7B\u578B\uFF0C\u5219\u4E0E\u4E0A\u9762\u4E00\u6837\u4E5F\u662F\u5224\u65AD\u5DE6\u4FA7\u7C7B\u578B\u662F\u5426\u53EF\u8D4B\u4E88\u53F3\u4FA7\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token operator">=</span> <span class="token builtin">string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">NAME</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token operator">?</span> <span class="token builtin">string</span> <span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token keyword">const</span> str<span class="token operator">:</span> <span class="token constant">NAME</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span> <span class="token comment">//string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C extends \u662F\u6CDB\u578B\u7C7B\u578B\uFF0C\u5E76\u4E14\u4F20\u5165\u7684\u7C7B\u578B\u662F\u8054\u5408\u7C7B\u578B\u3002\u5219\u5206\u522B\u8FDB\u884C\u5224\u65AD\uFF0C\u6700\u540E\u5F97\u5230\u8054\u5408\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token operator">=</span> <span class="token builtin">string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">NAME</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">TYPE</span></span> <span class="token operator">?</span> <span class="token builtin">string</span> <span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token keyword">const</span> bol<span class="token operator">:</span> <span class="token constant">NAME</span><span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">//string | boolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6761\u4EF6\u5224\u65AD\u4E5F\u53EF\u4EE5\u5D4C\u5957\u4F7F\u7528</p><div class="language-TS ext-TS line-numbers-mode"><pre class="language-TS"><code>type TYPE = string
type TYPE1 = string | number
type NAME&lt;T&gt; =
  T extends TYPE ? string :
    T extends TYPE1 ? symbol : boolean

const hd: NAME&lt;string | number&gt; = &#39;\u5F20\u4E09&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528**[]**\u5305\u88F9\u7C7B\u578B\uFF0C\u8868\u793A\u4F7F\u7528\u6CDB\u578B\u7684\u6574\u4F53\u8FDB\u884C\u6BD4\u8F83</p><div class="language-TS ext-TS line-numbers-mode"><pre class="language-TS"><code>type TYPE = string | number
type TYPE1 = string | number
type NAME&lt;T&gt; = [T] extends [TYPE] ? string : boolean
const hd: NAME&lt;string | number&gt; = &#39;\u5F20\u4E09&#39; //string
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exclude" tabindex="-1"><a class="header-anchor" href="#exclude" aria-hidden="true">#</a> Exclude</h2><ul><li>\u4ECE T \u6CDB\u578B\u7C7B\u578B \u4E2D\u8FC7\u6EE4\u6389 U \u7684\u7C7B\u578B</li><li>never \u662F\u4EFB\u4F55\u7C7B\u578B\u7684\u5B50\u7C7B\u578B\uFF0C\u53EF\u4EE5\u8D4B\u503C\u7ED9\u4EFB\u4F55\u7C7B\u578B\uFF0C\u6CA1\u6709\u7C7B\u578B\u662F never \u7684\u5B50\u7C7B\u578B\u6216\u53EF\u4EE5\u8D4B\u503C\u7ED9 never \u7C7B\u578B(never \u672C\u8EAB\u9664\u5916)</li></ul><div class="language-TS ext-TS line-numbers-mode"><pre class="language-TS"><code>type EXCLUDE&lt;T, U&gt; = T extends U ? never : T
type TYPE1 = string
type TYPE2 = string | number
const num: EXCLUDE&lt;TYPE2, TYPE1&gt; = 100; //number
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E8B\u5B9E\u4E0A typescript \u5DF2\u7ECF\u63D0\u4F9B\u4E86 Exclude \u5173\u952E\u5B57\u7528\u4E8E\u5B8C\u6210\u4E0A\u9762\u7684\u5DE5\u4F5C\uFF0C\u6240\u4EE5\u6211\u4EEC\u4E0D\u9700\u8981\u5355\u72EC\u5B9A\u4E49 Exclude \u7C7B\u578B\u4E86</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE1</span></span> <span class="token operator">=</span> <span class="token builtin">string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE2</span></span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span>
<span class="token keyword">const</span> num<span class="token operator">:</span> Exclude<span class="token operator">&lt;</span><span class="token constant">TYPE2</span><span class="token punctuation">,</span> <span class="token constant">TYPE1</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="extract" tabindex="-1"><a class="header-anchor" href="#extract" aria-hidden="true">#</a> Extract</h2><p>Extract \u4E0E Exclude \u76F8\u53CD\uFF0C\u7528\u4E8E\u83B7\u53D6\u76F8\u4EA4\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE1</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE2</span></span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span>
<span class="token keyword">const</span> str<span class="token operator">:</span> <span class="token constant">TYPE1</span><span class="token operator">&lt;</span><span class="token constant">TYPE2</span><span class="token punctuation">,</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D6\u4E24\u4E2A\u7C7B\u578B\u76F8\u540C\u7684\u5C5E\u6027\u540D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE1</span></span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span>
<span class="token keyword">const</span> str<span class="token operator">:</span> Extract<span class="token operator">&lt;</span><span class="token constant">TYPE1</span><span class="token punctuation">,</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pick" tabindex="-1"><a class="header-anchor" href="#pick" aria-hidden="true">#</a> Pick</h2><p>pick \u53EF\u4EE5\u7528\u4E8E\u4ECE\u5C5E\u6027\u4E2D\u6311\u9009\u51FA\u4E00\u7EC4\u5C5E\u6027\uFF0C\u7EC4\u6210\u65B0\u7684\u7C7B\u578B\u3002</p><p>\u5B9A\u4E49 pick \u7C7B\u578B\u7528\u4E8E\u4ECE<code>TYPE1</code>\u7C7B\u578B\u4E2D\u6311\u9009\u51FA name \u4E0E age \u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE1</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> skill<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">PICK</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">U</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">HD</span></span> <span class="token operator">=</span> <span class="token constant">PICK</span><span class="token operator">&lt;</span><span class="token constant">TYPE1</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span><span class="token operator">&gt;</span>
<span class="token keyword">const</span> obj<span class="token operator">:</span> <span class="token constant">HD</span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>typescript \u5DF2\u7ECF\u539F\u751F\u63D0\u4F9B\u4E86 Pick \u7C7B\u578B\uFF0C\u6240\u4EE5\u6211\u4EEC\u4E0D\u7528\u50CF\u4E0A\u9762\u90A3\u6837\u81EA\u5DF1\u5B9A\u4E49\u4E86</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">TYPE1</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> skill<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">HD</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">TYPE1</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span><span class="token operator">&gt;</span>
<span class="token keyword">const</span> obj<span class="token operator">:</span> <span class="token constant">HD</span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="omit" tabindex="-1"><a class="header-anchor" href="#omit" aria-hidden="true">#</a> Omit</h2><p>\u4ECE\u7C7B\u578B\u4E2D\u8FC7\u6EE4\u6389\u6307\u5B9A\u5C5E\u6027\uFF0C\u8FD9\u4E0E Pick \u7C7B\u578B\u5DE5\u5177\u529F\u80FD\u76F8\u53CD</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">OBJ</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">MyOmit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">K</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">obj</span> <span class="token operator">=</span> MyOmit<span class="token operator">&lt;</span><span class="token constant">OBJ</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span><span class="token operator">&gt;</span> <span class="token comment">//{city:string}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u5C06\u4E0A\u9762\u4EE3\u7801\u4F7F\u7528 Exclude \u4F18\u5316</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">OBJ</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">MyOmit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Exclude<span class="token operator">&lt;</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">obj</span> <span class="token operator">=</span> MyOmit<span class="token operator">&lt;</span><span class="token constant">OBJ</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span><span class="token operator">&gt;</span> <span class="token comment">//{city:string}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>typescript \u5DF2\u7ECF\u63D0\u4F9B\u4E86\u7C7B\u578B\u5DE5\u5177 Omit</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">OBJ</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> city<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">obj</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span><span class="token constant">OBJ</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span><span class="token operator">&gt;</span> <span class="token comment">//{city:string}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="partial" tabindex="-1"><a class="header-anchor" href="#partial" aria-hidden="true">#</a> Partial</h2><p>\u5B9A\u4E49 Partial \u7C7B\u578B\uFF0C\u7528\u4E8E\u5C06\u5168\u90E8\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u9009</p><div class="language-TS ext-TS line-numbers-mode"><pre class="language-TS"><code>type TYPE = { name: string, age: number }

type PARTIAL&lt;T&gt; = {
  [P in keyof T]?: T[P]
}
const obj: PARTIAL&lt;TYPE&gt; = { name: &#39;\u5F20\u4E09&#39; } // {name?:string,age?:number}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Typescript \u539F\u751F\u63D0\u4F9B\u4E86 Partial \u7684\u652F\u6301\uFF0C\u6240\u4EE5\u6211\u4EEC\u4E0D\u7528\u81EA\u5DF1\u5B9A\u4E49\u4E86</p><div class="language-TS ext-TS line-numbers-mode"><pre class="language-TS"><code>type TYPE = { name: string, age: number }
const obj: Partial&lt;TYPE&gt; = { name: &#39;\u5411\u519B&#39; }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="record" tabindex="-1"><a class="header-anchor" href="#record" aria-hidden="true">#</a> Record</h2><p>Record \u5E38\u7528\u4E8E\u5FEB\u901F\u5B9A\u4E49\u5BF9\u8C61\u7C7B\u578B\u4F7F\u7528</p><p>\u5B9E\u73B0\u4E00\u4E2A Record\uFF0CRECORD \u7C7B\u578B\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E3A\u7D22\u5F15\uFF0C\u7B2C\u4E8C\u4E2A\u4E3A\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">RECORD</span><span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">V</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">OBJ</span></span> <span class="token operator">=</span> <span class="token constant">RECORD</span><span class="token operator">&lt;</span><span class="token string">&#39;name&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span>
<span class="token keyword">const</span> obj<span class="token operator">:</span> <span class="token constant">OBJ</span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>typescript \u539F\u751F\u5DF2\u7ECF\u63D0\u4F9B\u4E86 Record \u7C7B\u578B\uFF0C\u4E0B\u9762\u5B9A\u4E49 MEMBER \u7C7B\u578B\uFF0C\u7D22\u5F15\u4E3A\u5B57\u7B26\u4E32\uFF0C\u503C\u4E3A\u4EFB\u4F55\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">OBJ</span></span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token string">&#39;name&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span>
<span class="token keyword">const</span> obj<span class="token operator">:</span> <span class="token constant">OBJ</span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="infer" tabindex="-1"><a class="header-anchor" href="#infer" aria-hidden="true">#</a> infer</h2><ul><li>infer \u53EA\u80FD\u5728 extends \u4E2D\u4F7F\u7528</li><li>infer \u7684\u7C7B\u578B\u53D8\u91CF\uFF0C\u53EA\u80FD\u5728 extends \u6761\u4EF6\u7684 true \u4E2D\u4F7F\u7528</li></ul><p>\u4F7F\u7528 infer \u63A8\u65AD\u5C5E\u6027\u503C\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">OBJ</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">AttrType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">M</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">M</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token constant">M</span> <span class="token operator">:</span> <span class="token constant">T</span>
<span class="token keyword">type</span> <span class="token class-name">valueType</span> <span class="token operator">=</span> AttrType<span class="token operator">&lt;</span><span class="token constant">OBJ</span><span class="token operator">&gt;</span> <span class="token comment">//string | number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 infer \u83B7\u53D6\u503C\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">USER</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token function">get</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">GetType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token constant">K</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span>
<span class="token keyword">type</span> <span class="token class-name">valueType</span> <span class="token operator">=</span> GetType<span class="token operator">&lt;</span><span class="token constant">USER</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">OBJ</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">type</span> <span class="token class-name">GetFunctionReturnValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token constant">T</span>
<span class="token keyword">type</span> <span class="token class-name">valueType</span> <span class="token operator">=</span> GetFunctionReturnValue<span class="token operator">&lt;</span><span class="token constant">OBJ</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,93),o=[e];function c(l,i){return n(),a("div",null,o)}var k=s(t,[["render",c],["__file","typeTool.html.vue"]]);export{k as default};
