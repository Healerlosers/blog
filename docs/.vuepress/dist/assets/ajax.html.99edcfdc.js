import{_ as n,o as s,c as a,a as t}from"./app.933ce5ef.js";const p={},e=t(`<h1 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> Ajax</h1><h2 id="xmlhttprequest" tabindex="-1"><a class="header-anchor" href="#xmlhttprequest" aria-hidden="true">#</a> XMLHttpRequest</h2><p>\u4F7F\u7528 XMLHttpRequest \u53D1\u9001\u8BF7\u6C42\uFF0C\u662F\u4E00\u79CD\u5B58\u5728\u5F88\u4E45\u7684\u65B9\u6848\u3002\u73B0\u4EE3\u6D4F\u89C8\u5668\u652F\u6301\u4F7F\u7528 fetch \u7684\u5F02\u6B65\u8BF7\u6C42\u65B9\u5F0F\uFF0Cfetch \u57FA\u4E8E promise \u5F02\u6B65\u64CD\u4F5C\u4F53\u9A8C\u66F4\u597D</p><h3 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u672C\u4F7F\u7528</h3><p>\u4F7F\u7528 XMLHttpRequest \u53D1\u9001\u8BF7\u6C42\u9700\u8981\u6267\u884C\u4EE5\u4E0B\u51E0\u6B65</p><ol><li>\u4F7F\u7528 new XMLHttpRequest \u521B\u5EFA xhr \u5BF9\u8C61</li><li>xhr.open \u521D\u59CB\u5316\u8BF7\u6C42\u53C2\u6570</li><li>xhr.send \u53D1\u9001\u7F51\u7EDC\u8BF7\u6C42</li><li>xhr.onload \u76D1\u542C\u8BF7\u6C42\u7ED3\u679C</li><li>xhr.onerror \u8BF7\u6C42\u4E2D\u65AD\u7B49\u9519\u8BEF\u53D1\u751F\u65F6\u7684\u5904\u7406</li></ol><h3 id="\u54CD\u5E94\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u7C7B\u578B" aria-hidden="true">#</a> \u54CD\u5E94\u7C7B\u578B</h3><p>\u901A\u8FC7\u8BBE\u7F6E <code>xhr.responseType</code> \u5BF9\u54CD\u5E94\u7ED3\u679C\u8FDB\u884C\u58F0\u660E\uFF0C\u6765\u5BF9\u7ED3\u679C\u81EA\u52A8\u8FDB\u884C\u5904\u7406</p><table><thead><tr><th>\u7C7B\u578B</th><th>\u8BF4\u660E</th></tr></thead><tbody><tr><td>text</td><td>\u54CD\u5E94\u7ED3\u679C\u4E3A\u6587\u672C</td></tr><tr><td>json</td><td>\u54CD\u5E94\u5185\u5BB9\u4E3A JSON\uFF0C\u7CFB\u7EDF\u4F1A\u81EA\u52A8\u5C06\u7ED3\u679C\u8F6C\u4E3A JSON \u5BF9\u8C61</td></tr><tr><td>blob</td><td>\u4E8C\u8FDB\u5236\u6570\u636E\u54CD\u5E94</td></tr><tr><td>document</td><td>XML DOCUMENT \u5185\u5BB9</td></tr></tbody></table><h3 id="\u54CD\u5E94\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u7ED3\u679C" aria-hidden="true">#</a> \u54CD\u5E94\u7ED3\u679C</h3><p>xhr.onload \u7528\u4E8E\u5904\u7406\u54CD\u5E94\u5B8C\u6BD5\u540E\u7684\u5904\u7406</p><p>\u4F7F\u7528\u4EE5\u4E0B\u5C5E\u6027\u6765\u5904\u7406\u7ED3\u679C</p><ul><li>xhr.status \u4E3A HTTP \u72B6\u6001\u7801 \u5982 404/422/403 \u7B49\uFF0C\u5F53\u4E3A 200 \u65F6\u4E3A\u6B63\u786E\u54CD\u5E94</li><li>xhr.statusText HTTP \u72B6\u6001\u7801\u5185\u5BB9\uFF0C200 \u65F6\u4E3A ok,404 \u4E3A Not Found</li><li>xhr.response \u670D\u52A1\u5668\u7AEF\u54CD\u5E94\u7684\u5185\u5BB9</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">5000</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ajax.php&#39;</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>xhr<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>xhr<span class="token punctuation">.</span>statusText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53D1\u9001\u8868\u5355" tabindex="-1"><a class="header-anchor" href="#\u53D1\u9001\u8868\u5355" aria-hidden="true">#</a> \u53D1\u9001\u8868\u5355</h3><p>\u4F7F\u7528 XMLHttpRequest \u53D1\u9001 POST \u8BF7\u6C42</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">)</span>
form<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;submit&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u963B\u6B62\u9ED8\u8BA4\u63D0\u4EA4\u884C\u4E3A</span>
  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;ajax.php&#39;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">post</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>
  xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>xhr<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>xhr<span class="token punctuation">.</span>statusText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C01\u88C5\u8BF7\u6C42\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5\u8BF7\u6C42\u7C7B" aria-hidden="true">#</a> \u5C01\u88C5\u8BF7\u6C42\u7C7B</h3><p>\u7ED3\u5408 Promise \u6765\u6784\u5EFA\u4E00\u4E2A XHR \u5F02\u6B65\u5904\u7406\u7C7B\uFF0C\u4F7F\u5F02\u6B65\u8BF7\u6C42\u64CD\u4F5C\u7684\u53D8\u5F97\u66F4\u7B80\u5355</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Ajax</span> <span class="token punctuation">{</span>
  options <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>method <span class="token operator">=</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>method <span class="token operator">=</span> method
    <span class="token keyword">this</span><span class="token punctuation">.</span>url <span class="token operator">=</span> url
    <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">formatData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">formatData</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data <span class="token operator">!=</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">let</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> form
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">this</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">xhr</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">post</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">this</span><span class="token punctuation">(</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">xhr</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">xhr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>method<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">)</span>
      xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>responseType
      xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span>
      xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> xhr<span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token literal-property property">error</span><span class="token operator">:</span> xhr<span class="token punctuation">.</span>statusText <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      xhr<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fetch" tabindex="-1"><a class="header-anchor" href="#fetch" aria-hidden="true">#</a> FETCH</h2><p>FETCH \u662F JS \u5347\u7EA7\u540E\u63D0\u4F9B\u7684\u66F4\u7B80\u4FBF\u7684\u7F51\u7EDC\u8BF7\u6C42\u7684\u64CD\u4F5C\u65B9\u6CD5\uFF0C\u5185\u90E8\u4F7F\u7528 Promise \u6765\u5B8C\u6210\u5F02\u6B65\u8BF7\u6C42</p><ul><li>response.json()\u63A5\u6536 JSON \u7C7B\u578B\u6570\u636E</li><li>response.text()\u63A5\u6536 TEXT \u7C7B\u578B\u6570\u636E</li><li>response.blog()\u63A5\u6536 Blog \u4E8C\u8FDB\u5236\u6570\u636E</li></ul><h3 id="\u8BF7\u793A\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u8BF7\u793A\u6B65\u9AA4" aria-hidden="true">#</a> \u8BF7\u793A\u6B65\u9AA4</h3><h4 id="\u54CD\u5E94\u5934\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u5934\u89E3\u6790" aria-hidden="true">#</a> \u54CD\u5E94\u5934\u89E3\u6790</h4><p>\u7B2C\u4E00\u6B65\u5BF9\u670D\u52A1\u5668\u8FD4\u56DE\u7684\u54CD\u5E94\u5934\u8FDB\u884C\u89E3\u6790\uFF0C\u4F1A\u63A5\u5230 Response \u7C7B\u521B\u5EFA\u7684\u5BF9\u8C61\u5B9E\u4F8B\uFF0C\u91CC\u9762\u5305\u542B\u4EE5\u4E0B\u5C5E\u6027\u3002</p><ul><li>status:HTTP \u72B6\u6001\u7801</li><li>ok:\u72B6\u6001\u7801\u4E3A 200-299 \u65F6\u4E3A true \u7684\u5E03\u5C14\u503C</li></ul><h4 id="\u54CD\u5E94\u5185\u5BB9\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u5185\u5BB9\u89E3\u6790" aria-hidden="true">#</a> \u54CD\u5E94\u5185\u5BB9\u89E3\u6790</h4><p>\u7B2C\u4E8C\u6B65\u5BF9\u8FD4\u56DE\u7684\u4FDD\u5B58\u5728 response.body \u4E2D\u7684\u54CD\u5E94\u7ED3\u679C\u8FDB\u884C\u89E3\u6790\uFF0C\u652F\u6301\u4E86\u4EE5\u4E0B\u51E0\u79CD\u65B9\u5F0F\u5BF9\u7ED3\u679C\u8FDB\u884C\u89E3\u6790\u3002</p><ul><li>response.json()\u63A5\u6536 JSON \u7C7B\u578B\u6570\u636E</li><li>response.text()\u63A5\u6536 TEXT \u7C7B\u578B\u6570\u636E</li><li>response.blog()\u63A5\u6536 Blog \u4E8C\u8FDB\u5236\u6570\u636E</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ajax.php</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">articles</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>articles<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A fetch \u7ED3\u679C\u662F promise \u6240\u4EE5\u4E5F\u53EF\u4EE5\u4F7F\u7528 async/await \u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ajax.php</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> articles <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>articles<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="post" tabindex="-1"><a class="header-anchor" href="#post" aria-hidden="true">#</a> POST</h3><p>\u53D1\u9001 POST \u8BF7\u6C42\u9700\u8981\u8BBE\u7F6E\u8BF7\u6C42\u5934 Request header</p><h4 id="\u53D1\u9001\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u53D1\u9001\u8BF7\u6C42" aria-hidden="true">#</a> \u53D1\u9001\u8BF7\u6C42</h4><ul><li>\u53D1\u9001\u7684 JSON \u7C7B\u578B\u9700\u8981\u8BBE\u7F6E\u8BF7\u6C42\u5934\u4E3A <code>application/json;charset=utf-8</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">post</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hd.php</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json;charset=utf-8&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> articles <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>articles<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">post</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38),o=[e];function c(i,l){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","ajax.html.vue"]]);export{r as default};
