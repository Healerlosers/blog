import{_ as n,o as s,c as a,a as t}from"./app.8946284f.js";const p={},o=t(`<h1 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> Symbol</h1><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Symbol\u7528\u4E8E\u9632\u6B62\u5C5E\u6027\u540D\u51B2\u7A81\u800C\u4EA7\u751F\u7684\uFF0C\u6BD4\u5982\u5411\u7B2C\u4E09\u65B9\u5BF9\u8C61\u4E2D\u6DFB\u52A0\u5C5E\u6027\u65F6\u3002</p><p>Symbol \u7684\u503C\u662F\u552F\u4E00\u7684\uFF0C\u72EC\u4E00\u65E0\u4E8C\u7684\u4E0D\u4F1A\u91CD\u590D\u7684</p></div><h2 id="symbol-1" tabindex="-1"><a class="header-anchor" href="#symbol-1" aria-hidden="true">#</a> Symbol</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> sym2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//symbol</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym1 <span class="token operator">===</span> sym2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Symbol \u4E0D\u53EF\u4EE5\u6DFB\u52A0\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sym1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;\u540E\u76FE\u4EBA&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Cannot create property &#39;name&#39; on symbol &#39;Symbol()&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u63CF\u8FF0\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u63CF\u8FF0\u53C2\u6570" aria-hidden="true">#</a> \u63CF\u8FF0\u53C2\u6570</h2><p>\u53EF\u4F20\u5165\u5B57\u7B26\u4E32\u7528\u4E8E\u63CF\u8FF0Symbol\uFF0C\u65B9\u4FBF\u5728\u63A7\u5236\u53F0\u5206\u8FA8Symbol</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;is name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> sym2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FD9\u662F\u4E00\u4E2A\u6D4B\u8BD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Symbol(is name)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> sym2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//symbol</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Symbol(\u8FD9\u662F\u4E00\u4E2A\u6D4B\u8BD5)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F20\u5165\u76F8\u540C\u53C2\u6570Symbol\u4E5F\u662F\u72EC\u7ACB\u552F\u4E00\u7684\uFF0C\u56E0\u4E3A\u53C2\u6570\u53EA\u662F\u63CF\u8FF0\u800C\u5DF2\uFF0C\u4F46\u4F7F\u7528 <code>Symbol.for</code>\u5219\u4E0D\u4F1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> sym2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym1 <span class="token operator">===</span> sym2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528<code>description</code>\u53EF\u4EE5\u83B7\u53D6\u4F20\u5165\u7684\u63CF\u8FF0\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5F20\u4E09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="symbol-for" tabindex="-1"><a class="header-anchor" href="#symbol-for" aria-hidden="true">#</a> Symbol.for</h2><p><strong>\u6839\u636E\u63CF\u8FF0\u83B7\u53D6Symbol\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5219\u65B0\u5EFA\u4E00\u4E2ASymbol</strong></p><ul><li>\u4F7F\u7528Symbol.for\u4F1A\u5728\u7CFB\u7EDF\u4E2D\u5C06Symbol\u767B\u8BB0</li><li>\u4F7F\u7528Symbol\u5219\u4E0D\u4F1A\u767B\u8BB0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym1 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> sym2 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym1 <span class="token operator">===</span> sym2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="symbol-keyfor" tabindex="-1"><a class="header-anchor" href="#symbol-keyfor" aria-hidden="true">#</a> Symbol.keyFor</h2><p><strong><code>Symbol.keyFor</code> \u6839\u636E\u4F7F\u7528<code>Symbol.for</code>\u767B\u8BB0\u7684Symbol\u8FD4\u56DE\u63CF\u8FF0\uFF0C\u5982\u679C\u627E\u4E0D\u5230\u8FD4\u56DEundefined</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym1 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>sym1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5F20\u4E09</span>
<span class="token keyword">let</span> sym2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>sym2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5BF9\u8C61\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u5C5E\u6027" aria-hidden="true">#</a> \u5BF9\u8C61\u5C5E\u6027</h2><p><strong>Symbol \u662F\u72EC\u4E00\u65E0\u4E8C\u7684\u6240\u4EE5\u53EF\u4EE5\u4FDD\u8BC1\u5BF9\u8C61\u5C5E\u6027\u7684\u552F\u4E00</strong></p><ul><li>Symbol \u58F0\u660E\u548C\u8BBF\u95EE\u4F7F\u7528 <code>[]</code>\uFF08\u53D8\u91CF\uFF09\u5F62\u5F0F\u64CD\u4F5C</li><li>\u4E5F\u4E0D\u80FD\u4F7F\u7528 <code>.</code> \u8BED\u6CD5\u56E0\u4E3A <code>.</code>\u8BED\u6CD5\u662F\u64CD\u4F5C\u5B57\u7B26\u4E32\u5C5E\u6027\u7684</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5199\u6CD5\u662F\u9519\u8BEF\u7684\uFF0C\u4F1A\u5C06symbol \u5F53\u6210\u5B57\u7B26\u4E32symbol\u5904\u7406</span>
<span class="token keyword">let</span> symbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">symbol</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//{symbol: &#39;name&#39;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>symbol<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//name</span>

<span class="token comment">//\u6B63\u786E\u5199\u6CD5\u662F\u4EE5[] \u53D8\u91CF\u5F62\u5F0F\u58F0\u660E\u548C\u8BBF\u95EE</span>
<span class="token keyword">let</span> symbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5F20\u4E09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7F13\u5B58\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7F13\u5B58\u64CD\u4F5C" aria-hidden="true">#</a> \u7F13\u5B58\u64CD\u4F5C</h2><p><strong>\u4F7F\u7528<code>Symbol</code>\u53EF\u4EE5\u89E3\u51B3\u5728\u4FDD\u5B58\u6570\u636E\u65F6\u7531\u4E8E\u540D\u79F0\u76F8\u540C\u9020\u6210\u7684\u8026\u5408\u8986\u76D6\u95EE\u9898</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Cache</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token function">set</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> value
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> use <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;\u7F13\u5B58&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> cart <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
Cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>use<span class="token punctuation">.</span>key<span class="token punctuation">,</span>use<span class="token punctuation">)</span><span class="token punctuation">;</span>
Cache<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>cart<span class="token punctuation">.</span>key<span class="token punctuation">,</span>cart<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>use<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//{name: &#39;\u5F20\u4E09&#39;, key: Symbol(\u7F13\u5B58)}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cart<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//{name: &#39;\u674E\u56DB&#39;, key: Symbol(\u674E\u56DB)}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u904D\u5386\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u5C5E\u6027" aria-hidden="true">#</a> \u904D\u5386\u5C5E\u6027</h2><p><strong>Symbol \u4E0D\u80FD\u4F7F\u7528 <code>for/in</code>\u3001<code>for/of</code> \u904D\u5386\u64CD\u4F5C</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> symbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//name</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//name</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u53EF\u4EE5\u4F7F\u7528 <code>Object.getOwnPropertySymbols</code> \u83B7\u53D6\u6240\u6709<code>Symbol</code>\u5C5E\u6027</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> symbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Symbol(name)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u4E5F\u53EF\u4EE5\u4F7F\u7528 <code>Reflect.ownKeys(obj)</code> \u83B7\u53D6\u6240\u6709\u5C5E\u6027\u5305\u62EC<code>Symbol</code></strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> symbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>symbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//name Symbol(name)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5982\u679C\u5BF9\u8C61\u5C5E\u6027\u4E0D\u60F3\u88AB\u904D\u5386\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>Symbol</code>\u4FDD\u62A4</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> site <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">[</span>site<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">[</span>site<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> use <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> use<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//name</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36),e=[o];function c(l,i){return s(),a("div",null,e)}var k=n(p,[["render",c],["__file","symbol.html.vue"]]);export{k as default};
